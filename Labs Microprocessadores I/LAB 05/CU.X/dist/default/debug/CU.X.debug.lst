

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Oct 25 18:56:41 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F628A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000E                     	;# 
    59     000E                     	;# 
    60     000F                     	;# 
    61     0010                     	;# 
    62     0011                     	;# 
    63     0012                     	;# 
    64     0015                     	;# 
    65     0015                     	;# 
    66     0016                     	;# 
    67     0017                     	;# 
    68     0018                     	;# 
    69     0019                     	;# 
    70     001A                     	;# 
    71     001F                     	;# 
    72     0081                     	;# 
    73     0085                     	;# 
    74     0086                     	;# 
    75     008C                     	;# 
    76     008E                     	;# 
    77     0092                     	;# 
    78     0098                     	;# 
    79     0099                     	;# 
    80     009A                     	;# 
    81     009B                     	;# 
    82     009C                     	;# 
    83     009D                     	;# 
    84     009F                     	;# 
    85     0000                     	;# 
    86     0001                     	;# 
    87     0002                     	;# 
    88     0003                     	;# 
    89     0004                     	;# 
    90     0005                     	;# 
    91     0006                     	;# 
    92     000A                     	;# 
    93     000B                     	;# 
    94     000C                     	;# 
    95     000E                     	;# 
    96     000E                     	;# 
    97     000F                     	;# 
    98     0010                     	;# 
    99     0011                     	;# 
   100     0012                     	;# 
   101     0015                     	;# 
   102     0015                     	;# 
   103     0016                     	;# 
   104     0017                     	;# 
   105     0018                     	;# 
   106     0019                     	;# 
   107     001A                     	;# 
   108     001F                     	;# 
   109     0081                     	;# 
   110     0085                     	;# 
   111     0086                     	;# 
   112     008C                     	;# 
   113     008E                     	;# 
   114     0092                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009A                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009F                     	;# 
   122     0005                     _PORTA	set	5
   123     0006                     _PORTB	set	6
   124     0001                     _TMR0	set	1
   125     000B                     _INTCON	set	11
   126     0028                     _RA0	set	40
   127     0081                     _OPTION_REG	set	129
   128     0085                     _TRISA	set	133
   129     0086                     _TRISB	set	134
   130                           
   131                           	psect	cinit
   132     000D                     start_initialization:	
   133                           ; #config settings
   134                           
   135     000D                     __initialization:
   136                           
   137                           ; Clear objects allocated to COMMON
   138     000D  01FA               	clrf	__pbssCOMMON& (0+127)
   139     000E                     end_of_initialization:	
   140                           ;End of C runtime variable initialization code
   141                           
   142     000E                     __end_of__initialization:
   143     000E  0183               	clrf	3
   144     000F  2810               	ljmp	_main	;jump to C main() function
   145                           
   146                           	psect	bssCOMMON
   147     007A                     __pbssCOMMON:
   148     007A                     _contagens:
   149     007A                     	ds	1
   150                           
   151                           	psect	cstackCOMMON
   152     0070                     __pcstackCOMMON:
   153     0070                     ?_ISR:
   154     0070                     ??_ISR:	
   155                           ; 1 bytes @ 0x0
   156                           
   157     0070                     ?_debounce:	
   158                           ; 1 bytes @ 0x0
   159                           
   160     0070                     ?_main:	
   161                           ; 1 bytes @ 0x0
   162                           
   163     0070                     debounce@d:	
   164                           ; 1 bytes @ 0x0
   165                           
   166                           
   167                           ; 1 bytes @ 0x0
   168     0070                     	ds	3
   169     0073                     ??_debounce:
   170     0073                     debounce@BOUNCE:	
   171                           ; 1 bytes @ 0x3
   172                           
   173                           
   174                           ; 1 bytes @ 0x3
   175     0073                     	ds	1
   176     0074                     debounce@last_key:
   177                           
   178                           ; 1 bytes @ 0x4
   179     0074                     	ds	1
   180     0075                     debounce@count:
   181                           
   182                           ; 1 bytes @ 0x5
   183     0075                     	ds	1
   184     0076                     debounce@key_now:
   185                           
   186                           ; 1 bytes @ 0x6
   187     0076                     	ds	1
   188     0077                     ??_main:
   189     0077                     main@last_key:	
   190                           ; 1 bytes @ 0x7
   191                           
   192                           
   193                           ; 1 bytes @ 0x7
   194     0077                     	ds	1
   195     0078                     main@config:
   196                           
   197                           ; 1 bytes @ 0x8
   198     0078                     	ds	1
   199     0079                     main@key_now:
   200                           
   201                           ; 1 bytes @ 0x9
   202     0079                     	ds	1
   203                           
   204                           	psect	maintext
   205     0010                     __pmaintext:	
   206 ;;
   207 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   208 ;;
   209 ;; *************** function _main *****************
   210 ;; Defined at:
   211 ;;		line 74 in file "newfile.c"
   212 ;; Parameters:    Size  Location     Type
   213 ;;		None
   214 ;; Auto vars:     Size  Location     Type
   215 ;;  key_now         1    9[COMMON] unsigned char 
   216 ;;  config          1    8[COMMON] unsigned char 
   217 ;;  last_key        1    7[COMMON] unsigned char 
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   222 ;; Tracked objects:
   223 ;;		On entry : B00/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   227 ;;      Params:         0       0       0       0
   228 ;;      Locals:         3       0       0       0
   229 ;;      Temps:          0       0       0       0
   230 ;;      Totals:         3       0       0       0
   231 ;;Total ram usage:        3 bytes
   232 ;; Hardware stack levels required when called: 2
   233 ;; This function calls:
   234 ;;		_debounce
   235 ;; This function is called by:
   236 ;;		Startup code after reset
   237 ;; This function uses a non-reentrant model
   238 ;;
   239                           
   240     0010                     _main:	
   241                           ;psect for function _main
   242                           
   243     0010                     l647:	
   244                           ;incstack = 0
   245                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   246                           
   247                           
   248                           ;newfile.c: 76:  unsigned char key_now;;newfile.c: 77:  unsigned char last_key;;newfile.
      +                          c: 78:  unsigned char config=0;
   249     0010  01F8               	clrf	main@config
   250                           
   251                           ;newfile.c: 80:  TRISB = 0;
   252     0011  1683               	bsf	3,5	;RP0=1, select bank1
   253     0012  1303               	bcf	3,6	;RP1=0, select bank1
   254     0013  0186               	clrf	6	;volatile
   255     0014                     l649:
   256                           
   257                           ;newfile.c: 81:  TRISA = 0b00001110;
   258     0014  300E               	movlw	14
   259     0015  0085               	movwf	5	;volatile
   260     0016                     l651:
   261                           
   262                           ;newfile.c: 83:     OPTION_REG = 0x05;
   263     0016  3005               	movlw	5
   264     0017  0081               	movwf	1	;volatile
   265     0018                     l653:
   266                           
   267                           ;newfile.c: 87:  {;newfile.c: 88:   key_now = PORTA & 0b00001110;
   268     0018  1283               	bcf	3,5	;RP0=0, select bank0
   269     0019  1303               	bcf	3,6	;RP1=0, select bank0
   270     001A  0805               	movf	5,w	;volatile
   271     001B  390E               	andlw	14
   272     001C  00F9               	movwf	main@key_now
   273                           
   274                           ;newfile.c: 91:   if (key_now != last_key)
   275     001D  0879               	movf	main@key_now,w
   276     001E  0677               	xorwf	main@last_key,w
   277     001F  1903               	skipnz
   278     0020  2822               	goto	u61
   279     0021  2823               	goto	u60
   280     0022                     u61:
   281     0022  2857               	goto	l675
   282     0023                     u60:
   283     0023                     l655:
   284                           
   285                           ;newfile.c: 92:   {;newfile.c: 93:    if (!(debounce(1) & (1 << 1)))
   286     0023  3001               	movlw	1
   287     0024  2066               	fcall	_debounce
   288     0025  3902               	andlw	2
   289     0026  1D03               	btfss	3,2
   290     0027  2829               	goto	u71
   291     0028  282A               	goto	u70
   292     0029                     u71:
   293     0029  282D               	goto	l659
   294     002A                     u70:
   295     002A                     l657:
   296                           
   297                           ;newfile.c: 94:     config = 1;
   298     002A  01F8               	clrf	main@config
   299     002B  0AF8               	incf	main@config,f
   300     002C  2857               	goto	l675
   301     002D                     l659:
   302     002D  3002               	movlw	2
   303     002E  2066               	fcall	_debounce
   304     002F  3904               	andlw	4
   305     0030  1D03               	btfss	3,2
   306     0031  2833               	goto	u81
   307     0032  2834               	goto	u80
   308     0033                     u81:
   309     0033  2837               	goto	l663
   310     0034                     u80:
   311     0034                     l661:
   312                           
   313                           ;newfile.c: 97:                 config = 2;
   314     0034  3002               	movlw	2
   315     0035  00F8               	movwf	main@config
   316     0036  2857               	goto	l675
   317     0037                     l663:
   318     0037  3003               	movlw	3
   319     0038  2066               	fcall	_debounce
   320     0039  3908               	andlw	8
   321     003A  1D03               	btfss	3,2
   322     003B  283D               	goto	u91
   323     003C  283E               	goto	u90
   324     003D                     u91:
   325     003D  2841               	goto	l48
   326     003E                     u90:
   327     003E                     l665:
   328                           
   329                           ;newfile.c: 100:     config = 3;
   330     003E  3003               	movlw	3
   331     003F  00F8               	movwf	main@config
   332     0040  2857               	goto	l675
   333     0041                     l48:	
   334                           ;newfile.c: 101:   }
   335                           
   336                           
   337                           ;newfile.c: 104:   switch (config){
   338     0041  2857               	goto	l675
   339     0042                     l667:
   340                           
   341                           ;newfile.c: 107:                 contagens = 39;
   342     0042  3027               	movlw	39
   343     0043  00FA               	movwf	_contagens
   344                           
   345                           ;newfile.c: 108:                 PORTB = 0b00111000;
   346     0044  3038               	movlw	56
   347     0045  1283               	bcf	3,5	;RP0=0, select bank0
   348     0046  1303               	bcf	3,6	;RP1=0, select bank0
   349     0047  0086               	movwf	6	;volatile
   350                           
   351                           ;newfile.c: 109:                 break;
   352     0048  2862               	goto	l677
   353     0049                     l669:
   354                           
   355                           ;newfile.c: 112:                 contagens = 20;
   356     0049  3014               	movlw	20
   357     004A  00FA               	movwf	_contagens
   358                           
   359                           ;newfile.c: 113:                 PORTB = 0b11011101;
   360     004B  30DD               	movlw	221
   361     004C  1283               	bcf	3,5	;RP0=0, select bank0
   362     004D  1303               	bcf	3,6	;RP1=0, select bank0
   363     004E  0086               	movwf	6	;volatile
   364                           
   365                           ;newfile.c: 114:                 break;
   366     004F  2862               	goto	l677
   367     0050                     l671:
   368                           
   369                           ;newfile.c: 117:                 contagens = 13;
   370     0050  300D               	movlw	13
   371     0051  00FA               	movwf	_contagens
   372                           
   373                           ;newfile.c: 118:                 PORTB = 0b01111101;
   374     0052  307D               	movlw	125
   375     0053  1283               	bcf	3,5	;RP0=0, select bank0
   376     0054  1303               	bcf	3,6	;RP1=0, select bank0
   377     0055  0086               	movwf	6	;volatile
   378                           
   379                           ;newfile.c: 119:                 break;
   380     0056  2862               	goto	l677
   381     0057                     l675:
   382     0057  0878               	movf	main@config,w
   383                           
   384                           ; Switch size 1, requested type "simple"
   385                           ; Number of cases is 3, Range of values is 1 to 3
   386                           ; switch strategies available:
   387                           ; Name         Instructions Cycles
   388                           ; simple_byte           10     6 (average)
   389                           ; direct_byte           12     9 (fixed)
   390                           ; jumptable            263     9 (fixed)
   391                           ;	Chosen strategy is simple_byte
   392     0058  3A01               	xorlw	1	; case 1
   393     0059  1903               	skipnz
   394     005A  2842               	goto	l667
   395     005B  3A03               	xorlw	3	; case 2
   396     005C  1903               	skipnz
   397     005D  2849               	goto	l669
   398     005E  3A01               	xorlw	1	; case 3
   399     005F  1903               	skipnz
   400     0060  2850               	goto	l671
   401     0061  2862               	goto	l677
   402     0062                     l677:
   403                           
   404                           ;newfile.c: 122:   last_key = key_now;
   405     0062  0879               	movf	main@key_now,w
   406     0063  00F7               	movwf	main@last_key
   407     0064  2818               	goto	l653
   408     0065  280C               	ljmp	start
   409     0066                     __end_of_main:
   410                           
   411                           	psect	text1
   412     0066                     __ptext1:	
   413 ;; *************** function _debounce *****************
   414 ;; Defined at:
   415 ;;		line 47 in file "newfile.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;  d               1    wreg     unsigned char 
   418 ;; Auto vars:     Size  Location     Type
   419 ;;  d               1    0[COMMON] unsigned char 
   420 ;;  key_now         1    6[COMMON] unsigned char 
   421 ;;  count           1    5[COMMON] unsigned char 
   422 ;;  last_key        1    4[COMMON] unsigned char 
   423 ;;  BOUNCE          1    3[COMMON] unsigned char 
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      unsigned char 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0, btemp+1
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   433 ;;      Params:         0       0       0       0
   434 ;;      Locals:         4       0       0       0
   435 ;;      Temps:          0       0       0       0
   436 ;;      Totals:         4       0       0       0
   437 ;;Total ram usage:        4 bytes
   438 ;; Hardware stack levels used: 1
   439 ;; Hardware stack levels required when called: 1
   440 ;; This function calls:
   441 ;;		Nothing
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447     0066                     _debounce:	
   448                           ;psect for function _debounce
   449                           
   450     0066                     l609:	
   451                           ;incstack = 0
   452                           ; Regs used in _debounce: [wreg+status,2+status,0+btemp+1]
   453                           
   454                           
   455                           ;newfile.c: 47: char debounce(char d);newfile.c: 48: {;newfile.c: 49:   char BOUNCE = 7;
   456     0066  3007               	movlw	7
   457     0067  00F3               	movwf	debounce@BOUNCE
   458     0068                     l611:
   459                           
   460                           ;newfile.c: 51:   char count = 0;
   461     0068  01F5               	clrf	debounce@count
   462     0069                     l613:
   463                           
   464                           ;newfile.c: 52:   char last_key = 0;
   465     0069  01F4               	clrf	debounce@last_key
   466                           
   467                           ;newfile.c: 53:   char key_now;;newfile.c: 55:   while(count<BOUNCE)
   468     006A  287E               	goto	l625
   469     006B                     l615:
   470                           
   471                           ;newfile.c: 56:   {;newfile.c: 57:     key_now = PORTA & 0x0E;
   472     006B  1283               	bcf	3,5	;RP0=0, select bank0
   473     006C  1303               	bcf	3,6	;RP1=0, select bank0
   474     006D  0805               	movf	5,w	;volatile
   475     006E  390E               	andlw	14
   476     006F  00F6               	movwf	debounce@key_now
   477     0070                     l617:
   478                           
   479                           ;newfile.c: 59:     if(last_key==key_now)
   480     0070  0874               	movf	debounce@last_key,w
   481     0071  0676               	xorwf	debounce@key_now,w
   482     0072  1D03               	skipz
   483     0073  2875               	goto	u21
   484     0074  2876               	goto	u20
   485     0075                     u21:
   486     0075  287B               	goto	l621
   487     0076                     u20:
   488     0076                     l619:
   489                           
   490                           ;newfile.c: 60:     {;newfile.c: 61:      count++;
   491     0076  3001               	movlw	1
   492     0077  00FF               	movwf	btemp+1
   493     0078  087F               	movf	btemp+1,w
   494     0079  07F5               	addwf	debounce@count,f
   495                           
   496                           ;newfile.c: 62:     }
   497     007A  287C               	goto	l623
   498     007B                     l621:
   499                           
   500                           ;newfile.c: 64:     {;newfile.c: 65:      count=0;
   501     007B  01F5               	clrf	debounce@count
   502     007C                     l623:
   503                           
   504                           ;newfile.c: 67:     last_key = key_now;
   505     007C  0876               	movf	debounce@key_now,w
   506     007D  00F4               	movwf	debounce@last_key
   507     007E                     l625:
   508                           
   509                           ;newfile.c: 55:   while(count<BOUNCE)
   510     007E  0873               	movf	debounce@BOUNCE,w
   511     007F  0275               	subwf	debounce@count,w
   512     0080  1C03               	skipc
   513     0081  2883               	goto	u31
   514     0082  2884               	goto	u30
   515     0083                     u31:
   516     0083  286B               	goto	l615
   517     0084                     u30:
   518     0084                     l627:
   519                           
   520                           ;newfile.c: 70:   return key_now;
   521     0084  0876               	movf	debounce@key_now,w
   522     0085                     l42:
   523     0085  0008               	return
   524     0086                     __end_of_debounce:
   525                           
   526                           	psect	text2
   527     0086                     __ptext2:	
   528 ;; *************** function _ISR *****************
   529 ;; Defined at:
   530 ;;		line 15 in file "newfile.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, status,2, status,0, btemp+1
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   544 ;;      Params:         0       0       0       0
   545 ;;      Locals:         0       0       0       0
   546 ;;      Temps:          3       0       0       0
   547 ;;      Totals:         3       0       0       0
   548 ;;Total ram usage:        3 bytes
   549 ;; Hardware stack levels used: 1
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		Interrupt level 1
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557     0086                     _ISR:	
   558                           ;psect for function _ISR
   559                           
   560     0086                     i1l631:
   561                           
   562                           ;newfile.c: 17:     if (INTCON & (1 << 5))
   563     0086  1E8B               	btfss	11,5	;volatile
   564     0087  2889               	goto	u4_21
   565     0088  288A               	goto	u4_20
   566     0089                     u4_21:
   567     0089  289B               	goto	i1l25
   568     008A                     u4_20:
   569     008A                     i1l633:
   570                           
   571                           ;newfile.c: 18:     {;newfile.c: 19:         if (INTCON & (1 << 2))
   572     008A  1D0B               	btfss	11,2	;volatile
   573     008B  288D               	goto	u5_21
   574     008C  288E               	goto	u5_20
   575     008D                     u5_21:
   576     008D  289B               	goto	i1l25
   577     008E                     u5_20:
   578     008E                     i1l635:
   579                           
   580                           ;newfile.c: 20:         {;newfile.c: 21:             TMR0 = 256 - contagens;
   581     008E  087A               	movf	_contagens,w
   582     008F  3C00               	sublw	0
   583     0090  1283               	bcf	3,5	;RP0=0, select bank0
   584     0091  1303               	bcf	3,6	;RP1=0, select bank0
   585     0092  0081               	movwf	1	;volatile
   586     0093                     i1l637:
   587                           
   588                           ;newfile.c: 22:             INTCON &= ~(1 << 2);
   589     0093  30FB               	movlw	251
   590     0094  00FF               	movwf	btemp+1
   591     0095  087F               	movf	btemp+1,w
   592     0096  058B               	andwf	11,f	;volatile
   593     0097                     i1l639:
   594                           
   595                           ;newfile.c: 23:             PORTB ^= (1<<0);
   596     0097  3001               	movlw	1
   597     0098  00FF               	movwf	btemp+1
   598     0099  087F               	movf	btemp+1,w
   599     009A  0686               	xorwf	6,f	;volatile
   600     009B                     i1l25:
   601     009B  0872               	movf	??_ISR+2,w
   602     009C  00FF               	movwf	btemp+1
   603     009D  0871               	movf	??_ISR+1,w
   604     009E  008A               	movwf	10
   605     009F  0E70               	swapf	??_ISR,w
   606     00A0  0083               	movwf	3
   607     00A1  0EFE               	swapf	btemp,f
   608     00A2  0E7E               	swapf	btemp,w
   609     00A3  0009               	retfie
   610     00A4                     __end_of_ISR:
   611     007E                     btemp	set	126	;btemp
   612     007E                     wtemp0	set	126
   613                           
   614                           	psect	intentry
   615     0004                     __pintentry:	
   616                           ;incstack = 0
   617                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   618                           
   619     0004                     interrupt_function:
   620     007E                     saved_w	set	btemp
   621     0004  00FE               	movwf	btemp
   622     0005  0E03               	swapf	3,w
   623     0006  00F0               	movwf	??_ISR
   624     0007  080A               	movf	10,w
   625     0008  00F1               	movwf	??_ISR+1
   626     0009  087F               	movf	btemp+1,w
   627     000A  00F2               	movwf	??_ISR+2
   628     000B  2886               	ljmp	_ISR
   629                           
   630                           	psect	config
   631                           
   632                           ;Config register CONFIG @ 0x2007
   633                           ;	Oscillator Selection bits
   634                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   635                           ;	Watchdog Timer Enable bit
   636                           ;	WDTE = OFF, WDT disabled
   637                           ;	Power-up Timer Enable bit
   638                           ;	PWRTE = OFF, PWRT disabled
   639                           ;	RA5/MCLR/VPP Pin Function Select bit
   640                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   641                           ;	Brown-out Detect Enable bit
   642                           ;	BOREN = ON, BOD enabled
   643                           ;	Low-Voltage Programming Enable bit
   644                           ;	LVP = ON, RB4/PGM pin has PGM function, low-voltage programming enabled
   645                           ;	Data EE Memory Code Protection bit
   646                           ;	CPD = OFF, Data memory code protection off
   647                           ;	Flash Program Memory Code Protection bit
   648                           ;	CP = OFF, Code protection off
   649     2007                     	org	8199
   650     2007  3FEA               	dw	16362

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_debounce

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     150
                                              7 COMMON     3     3      0
                           _debounce
 ---------------------------------------------------------------------------------
 (1) _debounce                                             5     5      0      90
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _debounce

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       B      10        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Oct 25 18:56:41 2024

                     l42 0085                       l48 0041                       u20 0076  
                     u21 0075                       u30 0084                       u31 0083  
                     u60 0023                       u61 0022                       u70 002A  
                     u71 0029                       u80 0034                       u81 0033  
                     u90 003E                       u91 003D                      l611 0068  
                    l621 007B                      l613 0069                      l623 007C  
                    l615 006B                      l617 0070                      l625 007E  
                    l609 0066                      l627 0084                      l619 0076  
                    l651 0016                      l661 0034                      l653 0018  
                    l671 0050                      l663 0037                      l655 0023  
                    l647 0010                      l665 003E                      l657 002A  
                    l649 0014                      l667 0042                      l659 002D  
                    l675 0057                      l669 0049                      l677 0062  
                    _RA0 0028                      _ISR 0086                     ?_ISR 0070  
                   i1l25 009B                     _TMR0 0001              main@key_now 0079  
                   u4_20 008A                     u4_21 0089                     u5_20 008E  
                   u5_21 008D                     _main 0010                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  i1l631 0086                    i1l633 008A                    i1l635 008E  
                  i1l637 0093                    i1l639 0097                    _PORTA 0005  
                  _PORTB 0006             main@last_key 0077                    _TRISA 0085  
                  _TRISB 0086                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000D             __end_of_main 0066  
                 ??_main 0077                   _INTCON 000B         __end_of_debounce 0086  
                 saved_w 007E  __end_of__initialization 000E           __pcstackCOMMON 0070  
             __pmaintext 0010               __pintentry 0004                ?_debounce 0070  
                __ptext1 0066                  __ptext2 0086               ??_debounce 0073  
          debounce@count 0075     end_of_initialization 000E         debounce@last_key 0074  
             main@config 0078      start_initialization 000D              __end_of_ISR 00A4  
            __pbssCOMMON 007A                ___latbits 0000                _contagens 007A  
              debounce@d 0070        interrupt_function 0004          debounce@key_now 0076  
               _debounce 0066           debounce@BOUNCE 0073                 intlevel1 0000  
             _OPTION_REG 0081  
